package com.nandii.service.impl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.nandii.service.entity.Hotel;
import com.nandii.service.entity.Rating;
import com.nandii.service.entity.User;
import com.nandii.service.exceptions.ResourceNotFoundException;
import com.nandii.service.repository.UserRepo;
import com.nandii.service.service.UserService;

import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepo userRepo;
	
	@Autowired
	private RestTemplate restTemplate;
	
	//private Logger logger=(Logger) org.slf4j.LoggerFactory.getLogger(UserServiceImpl.class);
	
	@Override
	public User saveUser(User user) {
		
		String randomUserId = UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepo.save(user);
	}

	@Override
	public List<User> getAllUser() {
		
		return userRepo.findAll();
	}

	@Override
	public User getUser(String userid) {	 	
		
		User user= userRepo.findById(userid).orElseThrow(()->new ResourceNotFoundException("User with given id is not found on server..:"+userid));
	
		//get rating from abovve user
		//http://localhost:8083/ratings/users/b1786eca-b12e-48a7-8c31-6e16074aadb9
		
		Rating[] ratingsOfUser = restTemplate.getForObject("http://localhost:8083/ratings/users/"+user.getUserId(), Rating[].class);
		log.info("{}",forObject);
				
		
		List<Rating> collect = forObject.stream().map(rating->{
			//api call to hotel service to get the hotel
			//http://localhost:8082/hotels/f1c9d743-2a86-4072-a8cc-08e89379fb67
			
			ResponseEntity<Hotel> forEntity = restTemplate.getForEntity("http://localhost:8082/hotels/"+rating.getHotelId(), Hotel.class);
			Hotel hotel = forEntity.getBody();
			
			
			//set the hotel to rating
			rating.setHotel(hotel);
			
			//return the rating			
			return rating;
		}).collect(Collectors.toList());
		
		user.setRating(collect);
		
		 return user;
	}

}
